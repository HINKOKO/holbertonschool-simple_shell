.\" Automatically generated by Pandoc 2.5
.\"
.TH "Simple Shell" "1" "01/08/2022" "Gates of Shell !" "User Manual"
.hy
.SH NAME
.PP
\f[B]Simple Shell\f[R] \- Holberton\[cq]s school team project for
creating a minimalistic command line interpreter written in C
.SH SYNOPSIS
.PP
\f[B]./hsh\f[R]
.SH DESCRIPTION
.PP
\f[B]Simple Shell\f[R] is a Holberton\[cq]s school team project for
creating a minimalistic command line interpreter written in C
.SH OVERVIEW
.PP
This simple shell read line from the STDIN_FILENO, parse it and search
if any alias matches the command, then checks if any built\-in
corresponds, then finally check on the PATH.
If no command is found, it will print an error message.
.SH INVOCATION
.PP
Compile the Simple Shell using \[lq]gcc\[rq] with the options shown
below:
.PP
\ \ \ \ \ gcc \[en]Wall \-Werror \-Wextra \-pedantic \-std=gnu89 *.c \-o
hsh
.PP
Note the use of the wildcard \[lq]*\[rq] which will compile all the C
programs concurrently.
.PP
Simple Shell can be run in two modes, Interactive and Non\-Interactive.
The Interactive is run by entering the below command in your terminal
after compilation described before.
.PP
\ \ \ \ \ $ ./hsh
.PP
It will display a prompt, of this format \[lq]>\[rq] and you will be
able to type command and press enter.
.PP
The Non\-Interactive mode is run through the use of shell\-scripts.It
involves the use of piping (`|'): \ \ \ \ \  > echo `ls' | ./hsh
.SH BUILTINS
.PP
The following builtins are supported: \- exit exits the program \- env
prints the environments variables
.SH BUGS
.PP
No known bugs at this stage (August the 3rd, 2022).
.SH AUTHORS
.PP
Nehemie Mombanga and Anthony Pizzoni
